{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Messenger /frontend/src/pages/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [error, setError] = useState(null);\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [inviteEmail, setInviteEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Initialize socket connection\n    socketRef.current = io('http://localhost:5001', {\n      withCredentials: true\n    });\n\n    // Authenticate socket connection\n    const token = localStorage.getItem('token');\n    if (token) {\n      socketRef.current.emit('authenticate', token);\n    }\n\n    // Listen for new messages\n    socketRef.current.on('new_message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n      scrollToBottom();\n    });\n\n    // Cleanup on unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('/api/users');\n        setUsers(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        setError('Failed to load users');\n        setIsLoading(false);\n      }\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    if (selectedUser) {\n      fetchChatHistory();\n    }\n  }, [selectedUser]);\n  const fetchChatHistory = async () => {\n    try {\n      const response = await axios.get(`/api/messages?userId=${selectedUser._id}`);\n      setMessages(response.data);\n      scrollToBottom();\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setError('Failed to load chat history');\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedUser) return;\n    try {\n      const response = await axios.post('/api/messages', {\n        receiverId: selectedUser._id,\n        content: newMessage.trim()\n      });\n      setMessages(prevMessages => [...prevMessages, response.data]);\n      setNewMessage('');\n      scrollToBottom();\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError('Failed to send message');\n    }\n  };\n  const handleInvite = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/users/invite', {\n        email: inviteEmail\n      });\n      setShowInviteModal(false);\n      setInviteEmail('');\n      // Refresh users list\n      const response = await axios.get('/api/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error inviting user:', error);\n      setError('Failed to send invite');\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-users\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No users found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowInviteModal(true),\n          children: \"Invite Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : users.map(user => {\n        var _user$firstName;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `user-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) === user._id ? 'selected' : ''}`,\n          onClick: () => setSelectedUser(user),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: ((_user$firstName = user.firstName) === null || _user$firstName === void 0 ? void 0 : _user$firstName[0]) || user.email[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: user.firstName || user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedUser.firstName || selectedUser.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.senderId === selectedUser._id ? 'received' : 'sent'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: new Date(message.createdAt).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a user to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), showInviteModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Invite User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleInvite,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: inviteEmail,\n            onChange: e => setInviteEmail(e.target.value),\n            placeholder: \"Enter email address\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Send Invite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowInviteModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"dN2LifLX+26U9DVikp9EJVQFdu0=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","axios","io","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","users","setUsers","selectedUser","setSelectedUser","messages","setMessages","newMessage","setNewMessage","error","setError","showInviteModal","setShowInviteModal","inviteEmail","setInviteEmail","isLoading","setIsLoading","socketRef","messagesEndRef","navigate","current","withCredentials","token","localStorage","getItem","emit","on","message","prevMessages","scrollToBottom","disconnect","fetchUsers","response","get","data","console","fetchChatHistory","_id","_messagesEndRef$curre","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","post","receiverId","content","handleInvite","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","map","user","_user$firstName","firstName","senderId","Date","createdAt","toLocaleTimeString","ref","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/Messenger /frontend/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport './Chat.css';\n\nconst Chat = () => {\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [error, setError] = useState(null);\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [inviteEmail, setInviteEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Initialize socket connection\n    socketRef.current = io('http://localhost:5001', {\n      withCredentials: true\n    });\n\n    // Authenticate socket connection\n    const token = localStorage.getItem('token');\n    if (token) {\n      socketRef.current.emit('authenticate', token);\n    }\n\n    // Listen for new messages\n    socketRef.current.on('new_message', (message) => {\n      setMessages(prevMessages => [...prevMessages, message]);\n      scrollToBottom();\n    });\n\n    // Cleanup on unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('/api/users');\n        setUsers(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        setError('Failed to load users');\n        setIsLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser) {\n      fetchChatHistory();\n    }\n  }, [selectedUser]);\n\n  const fetchChatHistory = async () => {\n    try {\n      const response = await axios.get(`/api/messages?userId=${selectedUser._id}`);\n      setMessages(response.data);\n      scrollToBottom();\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setError('Failed to load chat history');\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedUser) return;\n\n    try {\n      const response = await axios.post('/api/messages', {\n        receiverId: selectedUser._id,\n        content: newMessage.trim()\n      });\n\n      setMessages(prevMessages => [...prevMessages, response.data]);\n      setNewMessage('');\n      scrollToBottom();\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError('Failed to send message');\n    }\n  };\n\n  const handleInvite = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/users/invite', { email: inviteEmail });\n      setShowInviteModal(false);\n      setInviteEmail('');\n      // Refresh users list\n      const response = await axios.get('/api/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error inviting user:', error);\n      setError('Failed to send invite');\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"users-list\">\n        <h2>Chats</h2>\n        {users.length === 0 ? (\n          <div className=\"no-users\">\n            <p>No users found</p>\n            <button onClick={() => setShowInviteModal(true)}>Invite Users</button>\n          </div>\n        ) : (\n          users.map(user => (\n            <div\n              key={user._id}\n              className={`user-item ${selectedUser?._id === user._id ? 'selected' : ''}`}\n              onClick={() => setSelectedUser(user)}\n            >\n              <div className=\"user-avatar\">\n                {user.firstName?.[0] || user.email[0]}\n              </div>\n              <div className=\"user-info\">\n                <h3>{user.firstName || user.email}</h3>\n                <p>{user.email}</p>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n\n      <div className=\"chat-area\">\n        {selectedUser ? (\n          <>\n            <div className=\"chat-header\">\n              <h2>{selectedUser.firstName || selectedUser.email}</h2>\n            </div>\n            <div className=\"messages-container\">\n              {messages.map((message) => (\n                <div\n                  key={message._id}\n                  className={`message ${message.senderId === selectedUser._id ? 'received' : 'sent'}`}\n                >\n                  <div className=\"message-content\">{message.content}</div>\n                  <div className=\"message-time\">\n                    {new Date(message.createdAt).toLocaleTimeString()}\n                  </div>\n                </div>\n              ))}\n              <div ref={messagesEndRef} />\n            </div>\n            <form onSubmit={handleSendMessage} className=\"message-input\">\n              <input\n                type=\"text\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                placeholder=\"Type a message...\"\n              />\n              <button type=\"submit\">Send</button>\n            </form>\n          </>\n        ) : (\n          <div className=\"no-chat-selected\">\n            <p>Select a user to start chatting</p>\n          </div>\n        )}\n      </div>\n\n      {showInviteModal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Invite User</h2>\n            <form onSubmit={handleInvite}>\n              <input\n                type=\"email\"\n                value={inviteEmail}\n                onChange={(e) => setInviteEmail(e.target.value)}\n                placeholder=\"Enter email address\"\n                required\n              />\n              <div className=\"modal-buttons\">\n                <button type=\"submit\">Send Invite</button>\n                <button type=\"button\" onClick={() => setShowInviteModal(false)}>\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}