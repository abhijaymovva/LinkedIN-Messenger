{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Messenger /frontend/src/pages/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [error, setError] = useState(null);\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [inviteEmail, setInviteEmail] = useState('');\n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    // Connect to WebSocket server\n    socketRef.current = io('http://localhost:5001', {\n      withCredentials: true,\n      extraHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    // Authenticate socket connection\n    socketRef.current.emit('authenticate', token);\n\n    // Listen for new messages\n    socketRef.current.on('new_message', message => {\n      setMessages(prev => [...prev, message]);\n    });\n\n    // Listen for errors\n    socketRef.current.on('error', error => {\n      setError(error.message);\n    });\n\n    // Fetch users and messages\n    const fetchData = async () => {\n      try {\n        // Fetch users\n        const usersResponse = await axios.get('/auth/users');\n        setUsers(usersResponse.data);\n\n        // If there are users, select the first one\n        if (usersResponse.data.length > 0) {\n          setSelectedUser(usersResponse.data[0]);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to load chat data');\n      }\n    };\n    fetchData();\n    return () => {\n      var _socketRef$current;\n      (_socketRef$current = socketRef.current) === null || _socketRef$current === void 0 ? void 0 : _socketRef$current.disconnect();\n    };\n  }, [navigate]);\n\n  // Fetch messages when selected user changes\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (!selectedUser) return;\n      try {\n        const response = await axios.get(`/messages/${selectedUser._id}`);\n        setMessages(response.data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n        setError('Failed to load messages');\n      }\n    };\n    fetchMessages();\n  }, [selectedUser]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedUser) return;\n    try {\n      const messageData = {\n        receiverId: selectedUser._id,\n        content: newMessage.trim()\n      };\n\n      // Send message through WebSocket\n      socketRef.current.emit('send_message', messageData);\n      setNewMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError('Failed to send message');\n    }\n  };\n  const handleInvite = async e => {\n    e.preventDefault();\n    if (!inviteEmail.trim()) return;\n    try {\n      await axios.post('/auth/invite', {\n        email: inviteEmail.trim()\n      });\n      setShowInviteModal(false);\n      setInviteEmail('');\n      setError(null);\n    } catch (error) {\n      console.error('Error sending invite:', error);\n      setError('Failed to send invite. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"invite-btn\",\n          onClick: () => setShowInviteModal(true),\n          children: \"Invite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-list\",\n        children: users.length > 0 ? users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `user-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) === user._id ? 'selected' : ''}`,\n          onClick: () => setSelectedUser(user),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: user.profilePicture ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.profilePicture,\n              alt: user.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-placeholder\",\n              children: user.firstName[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [user.firstName, \" \", user.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: user.headline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-users-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No users found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Invite your LinkedIn connections to start chatting!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"invite-btn\",\n            onClick: () => setShowInviteModal(true),\n            children: \"Invite Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Chat with \", selectedUser.firstName, \" \", selectedUser.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.senderId === selectedUser._id ? 'received' : 'sent'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: new Date(message.createdAt).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a user to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), users.length === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"invite-btn\",\n          onClick: () => setShowInviteModal(true),\n          children: \"Invite Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), showInviteModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Invite to Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter the email address of the LinkedIn user you want to invite:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleInvite,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: inviteEmail,\n            onChange: e => setInviteEmail(e.target.value),\n            placeholder: \"Enter email address\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowInviteModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Send Invite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"u8zEYUN12ZK9g5trKcwige3xIBQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","io","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","messages","setMessages","newMessage","setNewMessage","users","setUsers","selectedUser","setSelectedUser","error","setError","showInviteModal","setShowInviteModal","inviteEmail","setInviteEmail","socketRef","messagesEndRef","navigate","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","token","localStorage","getItem","withCredentials","extraHeaders","Authorization","emit","on","message","prev","fetchData","usersResponse","get","data","length","console","_socketRef$current","disconnect","fetchMessages","response","_id","handleSendMessage","e","preventDefault","trim","messageData","receiverId","content","handleInvite","post","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","user","profilePicture","src","alt","firstName","lastName","headline","index","senderId","Date","createdAt","toLocaleTimeString","ref","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/Messenger /frontend/src/pages/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './Chat.css';\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [error, setError] = useState(null);\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [inviteEmail, setInviteEmail] = useState('');\n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    // Connect to WebSocket server\n    socketRef.current = io('http://localhost:5001', {\n      withCredentials: true,\n      extraHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    // Authenticate socket connection\n    socketRef.current.emit('authenticate', token);\n\n    // Listen for new messages\n    socketRef.current.on('new_message', (message) => {\n      setMessages(prev => [...prev, message]);\n    });\n\n    // Listen for errors\n    socketRef.current.on('error', (error) => {\n      setError(error.message);\n    });\n\n    // Fetch users and messages\n    const fetchData = async () => {\n      try {\n        // Fetch users\n        const usersResponse = await axios.get('/auth/users');\n        setUsers(usersResponse.data);\n\n        // If there are users, select the first one\n        if (usersResponse.data.length > 0) {\n          setSelectedUser(usersResponse.data[0]);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to load chat data');\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      socketRef.current?.disconnect();\n    };\n  }, [navigate]);\n\n  // Fetch messages when selected user changes\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (!selectedUser) return;\n\n      try {\n        const response = await axios.get(`/messages/${selectedUser._id}`);\n        setMessages(response.data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n        setError('Failed to load messages');\n      }\n    };\n\n    fetchMessages();\n  }, [selectedUser]);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedUser) return;\n\n    try {\n      const messageData = {\n        receiverId: selectedUser._id,\n        content: newMessage.trim()\n      };\n\n      // Send message through WebSocket\n      socketRef.current.emit('send_message', messageData);\n      setNewMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError('Failed to send message');\n    }\n  };\n\n  const handleInvite = async (e) => {\n    e.preventDefault();\n    if (!inviteEmail.trim()) return;\n\n    try {\n      await axios.post('/auth/invite', { email: inviteEmail.trim() });\n      setShowInviteModal(false);\n      setInviteEmail('');\n      setError(null);\n    } catch (error) {\n      console.error('Error sending invite:', error);\n      setError('Failed to send invite. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"users-sidebar\">\n        <div className=\"sidebar-header\">\n          <h2>Users</h2>\n          <button \n            className=\"invite-btn\"\n            onClick={() => setShowInviteModal(true)}\n          >\n            Invite\n          </button>\n        </div>\n        <div className=\"users-list\">\n          {users.length > 0 ? (\n            users.map(user => (\n              <div\n                key={user._id}\n                className={`user-item ${selectedUser?._id === user._id ? 'selected' : ''}`}\n                onClick={() => setSelectedUser(user)}\n              >\n                <div className=\"user-avatar\">\n                  {user.profilePicture ? (\n                    <img src={user.profilePicture} alt={user.firstName} />\n                  ) : (\n                    <div className=\"avatar-placeholder\">\n                      {user.firstName[0]}\n                    </div>\n                  )}\n                </div>\n                <div className=\"user-info\">\n                  <h3>{user.firstName} {user.lastName}</h3>\n                  <p>{user.headline}</p>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"no-users-message\">\n              <p>No users found</p>\n              <p>Invite your LinkedIn connections to start chatting!</p>\n              <button \n                className=\"invite-btn\"\n                onClick={() => setShowInviteModal(true)}\n              >\n                Invite Users\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"chat-main\">\n        {selectedUser ? (\n          <>\n            <div className=\"chat-header\">\n              <h2>Chat with {selectedUser.firstName} {selectedUser.lastName}</h2>\n            </div>\n            <div className=\"messages-container\">\n              {messages.map((message, index) => (\n                <div\n                  key={index}\n                  className={`message ${message.senderId === selectedUser._id ? 'received' : 'sent'}`}\n                >\n                  <div className=\"message-content\">{message.content}</div>\n                  <div className=\"message-time\">\n                    {new Date(message.createdAt).toLocaleTimeString()}\n                  </div>\n                </div>\n              ))}\n              <div ref={messagesEndRef} />\n            </div>\n            <form onSubmit={handleSendMessage} className=\"message-input\">\n              <input\n                type=\"text\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                placeholder=\"Type a message...\"\n              />\n              <button type=\"submit\">Send</button>\n            </form>\n          </>\n        ) : (\n          <div className=\"no-chat-selected\">\n            <p>Select a user to start chatting</p>\n            {users.length === 0 && (\n              <button \n                className=\"invite-btn\"\n                onClick={() => setShowInviteModal(true)}\n              >\n                Invite Users\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n\n      {showInviteModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h2>Invite to Chat</h2>\n            <p>Enter the email address of the LinkedIn user you want to invite:</p>\n            <form onSubmit={handleInvite}>\n              <input\n                type=\"email\"\n                value={inviteEmail}\n                onChange={(e) => setInviteEmail(e.target.value)}\n                placeholder=\"Enter email address\"\n                required\n              />\n              <div className=\"modal-actions\">\n                <button type=\"button\" onClick={() => setShowInviteModal(false)}>\n                  Cancel\n                </button>\n                <button type=\"submit\">Send Invite</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}